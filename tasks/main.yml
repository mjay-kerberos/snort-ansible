---
- name: Install prerequisite packages
  apt:
    name:
      - gcc
      - libpcre3-dev
      - zlib1g-dev
      - libluajit-5.1-dev
      - libpcap-dev
      - openssl
      - libssl-dev
      - libnghttp2-dev
      - libdumbnet-dev
      - bison
      - flex
      - libdnet
      - autoconf
      - libtool
    state: present
    update_cache: yes

- name: Create download directory for Snort sources
  file:
    path: "~/snort_src"
    state: directory
    mode: '0755'

- name: Download DAQ (Data Acquisition library) source with wget
  ansible.builtin.shell:
    cmd: wget --no-check-certificate -O /root/snort_src/libdaq-3.0.14.tar.gz https://www.snort.org/downloads/snortplus/libdaq-3.0.14.tar.gz

- name: Extract DAQ source
  ansible.builtin.unarchive:
    src: "/root/snort_src/libdaq-3.0.14.tar.gz"
    dest: "/root/snort_src/"
    remote_src: yes

- name: List DAQ source directory
  ansible.builtin.command: ls -lah /root/snort_src/
  register: ls_result

- name: Display DAQ source directory contents
  ansible.builtin.debug:
    var: ls_result.stdout_lines

- name: Run autoreconf for DAQ
  ansible.builtin.command:
    cmd: autoreconf -f -i
    chdir: /root/snort_src/libdaq-3.0.14

- name: Install additional required packages for DAQ
  ansible.builtin.apt:
    name:
      - g++
      - libcmocka-dev
      - build-essential
    state: present
    update_cache: yes

- name: Ensure sudo is installed
  ansible.builtin.raw: apt-get update && apt-get install -y sudo

- name: Install DAQ from source
  block:
    - name: Configure DAQ with disabled dependency tracking
      ansible.builtin.command:
        cmd: "./configure --disable-dependency-tracking --enable-sourcefire"
      args:
        chdir: /root/snort_src/libdaq-3.0.14
      
    # #Trouble shooting tasks
    # - name: Display config.log contents
    #   ansible.builtin.shell:
    #     cmd: cat /root/snort_src/libdaq-3.0.14/config.log
    #   register: config_log

    # - name: Output config.log contents
    #   ansible.builtin.debug:
    #     var: config_log.stdout_lines""
    # #End of Trouble shooting tasls

    - name: Compile DAQ
      ansible.builtin.command:
        cmd: make
        chdir: /root/snort_src/libdaq-3.0.14

    - name: Install DAQ
      ansible.builtin.command:
        cmd: make install
      become: yes
      args:
        chdir: /root/snort_src/libdaq-3.0.14

- name: Ensure Snort source directory exists
  ansible.builtin.file:
    path: /root/snort_src
    state: directory

- name: Download Snort source
  ansible.builtin.get_url:
    url: "https://www.snort.org/downloads/snortplus/snort3-3.1.78.0.tar.gz" # Updated to the latest version
    dest: "/root/snort_src/snort-3.1.78.0.tar.gz"

- name: Extract Snort source
  ansible.builtin.unarchive:
    src: "/root/snort_src/snort-3.1.78.0.tar.gz"
    dest: "/root/snort_src/"
    remote_src: yes

# - name: List Snort source directory
#   ansible.builtin.command: ls -lah /root/snort_src/
#   register: snort_src_list

# - name: Display Snort source directory contents
#   ansible.builtin.debug:
#     var: snort_src_list.stdout_lines

# - name: Display Snort directory listing
#   ansible.builtin.debug:
#     var: snort_dir_contents.stdout_lines

- name: Ensure CMake and other build dependencies are installed
  ansible.builtin.apt:
    name:
      - cmake
      - make
      - g++
    state: present
    update_cache: yes

- name: Configure Snort with CMake
  ansible.builtin.shell:
    cmd: "./configure_cmake.sh --prefix=/usr/local"
    chdir: "/root/snort_src/snort3-3.1.78.0"

- name: Build Snort using CMake
  ansible.builtin.shell:
    cmd: "make"
    chdir: "/root/snort_src/snort3-3.1.78.0/build"

- name: Install Snort
  ansible.builtin.shell:
    cmd: "make install"
    become: yes
    chdir: "/root/snort_src/snort3-3.1.78.0/build"

- name: Set environment variables for Snort
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: "{{ item }}"
    state: present
  loop:
    - "PATH=\"$PATH:/usr/local/bin\""
    - "SNORT_HOME=\"/usr/local/bin\""

- name: Ensure Snort rules directory exists
  ansible.builtin.file:
    path: "{{ snort_rules_path }}/community"
    state: directory

- name: Download Snort 3 community rules
  ansible.builtin.get_url:
    url: "{{ snort_rules_url }}"
    dest: "{{ snort_rules_path }}/snort3-community-rules.tar.gz"

- name: Extract Snort 3 community rules
  ansible.builtin.unarchive:
    src: "{{ snort_rules_path }}/snort3-community-rules.tar.gz"
    dest: "{{ snort_rules_path }}/community"
    remote_src: yes

- name: Copy Snort configuration files
  ansible.builtin.template:
    src: "snort.conf.j2"
    dest: "/etc/snort/snort.conf"

- name: Ensure Snort service is running
  ansible.builtin.systemd:
    name: snort
    state: started
    enabled: yes
    daemon_reload: yes
